version: "3.9"

services:
  frontend:
    image: sermalenk/skypro-front:lesson-35
    restart: always
    depends_on:
      - api
    ports:
      - "80:80"
    volumes:
      - ./deploy/nginx.conf:/etc/nginx/conf.d/default.conf
      
  api:
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    env_file:
      - todolist/.env
    environment:
      DB_HOST: postgres
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - migrations
    volumes:
      - ./.:/opt/todolist

  migrations:
    build:
      context: .
    env_file:
      - todolist/.env
    environment:
      DB_HOST: postgres
    depends_on:
      - postgres
    command: python todolist/manage.py migrate


  postgres:
    image: postgres:12.4-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./deploy/init-database.sh:/docker-entrypoint-initdb.d/init-database.sh
    restart: on-failure
    env_file:
      - todolist/.env
    environment:
      POSTGRES_USER: <DB_USER>
      POSTGRES_PASSWORD: <DB_PASSWORD>
      POSTGRES_DB: <DB_NAME>
    healthcheck:
      test: pg_isready -U <DB_USER> -d <DB_NAME>
      interval: 5s
      timeout: 3s
      retries: 3
    ports:
      - "5432:5432"

volumes:
  postgres_data:
